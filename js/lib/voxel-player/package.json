{
  "_args": [
    [
      {
        "raw": "voxel-player",
        "scope": null,
        "escapedName": "voxel-player",
        "name": "voxel-player",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/evan.bacon/GoogleDrive/react-native/exponent/voxel"
    ]
  ],
  "_from": "voxel-player@latest",
  "_id": "voxel-player@0.1.0",
  "_inCache": true,
  "_location": "/voxel-player",
  "_npmUser": {
    "name": "substack",
    "email": "mail@substack.net"
  },
  "_npmVersion": "1.2.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "voxel-player",
    "scope": null,
    "escapedName": "voxel-player",
    "name": "voxel-player",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/voxel-player/-/voxel-player-0.1.0.tgz",
  "_shasum": "dacfaf0e60e42ec84732feb6b4f05d5df00a64be",
  "_shrinkwrap": null,
  "_spec": "voxel-player",
  "_where": "/Users/evan.bacon/GoogleDrive/react-native/exponent/voxel",
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "bugs": {
    "url": "https://github.com/substack/voxel-player/issues"
  },
  "dependencies": {
    "minecraft-skin": "~0.1.0"
  },
  "description": "create a skinnable player with physics enabled",
  "devDependencies": {
    "ecstatic": "~0.3.0",
    "painterly-textures": "~0.0.3",
    "voxel": "~0.1.3",
    "voxel-engine": "~0.6.0"
  },
  "directories": {},
  "dist": {
    "shasum": "dacfaf0e60e42ec84732feb6b4f05d5df00a64be",
    "tarball": "https://registry.npmjs.org/voxel-player/-/voxel-player-0.1.0.tgz"
  },
  "homepage": "https://github.com/substack/voxel-player",
  "keywords": [
    "voxel",
    "player",
    "physics",
    "engine",
    "skin",
    "browser"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "substack",
      "email": "mail@substack.net"
    }
  ],
  "name": "voxel-player",
  "optionalDependencies": {},
  "readme": "# voxel-player\n\nCreate a skinnable player with physics enabled.\n\n# example\n\n``` js\nvar createGame = require('voxel-engine');\nvar game = createGame({\n    generate: require('voxel').generator['Valley'],\n    texturePath: '/textures/'\n});\nwindow.game = game;\ngame.appendTo('#container');\n\nvar createPlayer = require('voxel-player')(game);\nvar substack = createPlayer('substack.png');\nsubstack.possess();\n\nwindow.addEventListener('keydown', function (ev) {\n    if (ev.keyCode === 'R'.charCodeAt(0)) {\n        substack.toggle();\n    }\n});\n```\n\n# methods\n\n``` js\nvar voxelPlayer = require('voxel-player')\n```\n\n## var createPlayer = voxelPlayer(game)\n\nReturn a function `createPlayer` from a\n[voxel-engine](https://github.com/maxogden/voxel-engine) `game` instance.\n\n## var player = createPlayer(img)\n\nReturn a new player from a image file src string `img`.\n\n## player.position.set(x, y, z)\n\nSet the player position.\n\n## player.subjectTo(forceVector)\n\nSubject the player to a force of gravity or some such. The default value is\na THREE.Vector3 with `{ x: 0, y: -0.00009, z: 0 }`.\n\n## player.move(x, y, z) or player.move(vec)\n\nMove a relative amount with `(x, y, z)` or a THREE.Vector3 `vec`.\n\n## player.moveTo(x, y, z) or player.move(pos)\n\nMove to an absolute position with `(x, y, z)` or a THREE.Vector3 `pos`.\n\n## player.pov(view)\n\nSet the player view type to `'first'` or `'third'` person perspective. You can\nalso use a number: `1` or `3`.\n\n## player.toggle()\n\nToggle the player pov between 1st and 3rd.\n\n## player.possess()\n\nSet the player as the active camera view.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install voxel-player\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/voxel-player.git"
  },
  "version": "0.1.0"
}
