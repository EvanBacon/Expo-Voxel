{
  "_args": [
    [
      {
        "raw": "aabb-3d@0.0.X",
        "scope": null,
        "escapedName": "aabb-3d",
        "name": "aabb-3d",
        "rawSpec": "0.0.X",
        "spec": ">=0.0.0 <0.1.0",
        "type": "range"
      },
      "/Users/evan.bacon/GoogleDrive/react-native/exponent/voxel/node_modules/voxel-physical"
    ]
  ],
  "_from": "aabb-3d@>=0.0.0 <0.1.0",
  "_id": "aabb-3d@0.0.0",
  "_inCache": true,
  "_location": "/voxel-physical/aabb-3d",
  "_npmUser": {
    "name": "chrisdickinson",
    "email": "chris@neversaw.us"
  },
  "_npmVersion": "1.1.69",
  "_phantomChildren": {},
  "_requested": {
    "raw": "aabb-3d@0.0.X",
    "scope": null,
    "escapedName": "aabb-3d",
    "name": "aabb-3d",
    "rawSpec": "0.0.X",
    "spec": ">=0.0.0 <0.1.0",
    "type": "range"
  },
  "_requiredBy": [
    "/voxel-physical"
  ],
  "_resolved": "https://registry.npmjs.org/aabb-3d/-/aabb-3d-0.0.0.tgz",
  "_shasum": "223ef5798a747d1d5dfb6555a4c6ad942e1719c8",
  "_shrinkwrap": null,
  "_spec": "aabb-3d@0.0.X",
  "_where": "/Users/evan.bacon/GoogleDrive/react-native/exponent/voxel/node_modules/voxel-physical",
  "author": {
    "name": "Chris Dickinson",
    "email": "chris@neversaw.us"
  },
  "bugs": {
    "url": "https://github.com/chrisdickinson/aabb-3d/issues"
  },
  "dependencies": {
    "gl-matrix": "2.X.X"
  },
  "description": "3d axis aligned bounding boxes",
  "devDependencies": {
    "tape": "~0.1.5"
  },
  "directories": {},
  "dist": {
    "shasum": "223ef5798a747d1d5dfb6555a4c6ad942e1719c8",
    "tarball": "https://registry.npmjs.org/aabb-3d/-/aabb-3d-0.0.0.tgz"
  },
  "homepage": "https://github.com/chrisdickinson/aabb-3d#readme",
  "keywords": [
    "aabb",
    "axis",
    "aligned",
    "bounding",
    "boxes",
    "3d"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "chrisdickinson",
      "email": "chris@neversaw.us"
    }
  ],
  "name": "aabb-3d",
  "optionalDependencies": {},
  "readme": "# aabb-3d\n\nAxis aligned bounding boxes for fun and profit.\n\n[![browser support](http://ci.testling.com/chrisdickinson/aabb-3d.png)](http://ci.testling.com/chrisdickinson/aabb-3d)\n\n```javascript\nvar aabb = require('aabb-3d')\n\nvar bounding_box = aabb([0, 0, 0], [12, 12, 12])   // x, y, z == 0; width, height, depth == 12\n  , other = aabb([10, 10, 10], [2, 2, 2])\n\nbounding_box.intersects(other) // true\nbounding_box.translate([2, 2, 2])  // moves the bounding box\nbounding_box.expand(other)  // returns a new aabb that surrounds both bboxes\n\n```\n\n# API\n\n### aabb = [new ]aabb([x, y, z], [w, h, d])\n\nreturns a new aabb.\n\n### aabb.width() -> Number\n### aabb.height() -> Number\n### aabb.depth() -> Number\n### aabb.x0()\n### aabb.y0()\n### aabb.x1()\n### aabb.y1()\n### aabb.z0()\n### aabb.z1()\n\nreturns:\n\n```\n    \n        x0/y1/z1---x1/y1/z1\ndepth->  /           /|\n        /           / |\n    x0/y1/z0 -- x1/y1/z0\n      |           |   |\n      |           | <-- height\n      |           |  /\n      |           | /\n   x0/y0/z0 ----- x1/y0/z0\n            ^\n            |\n          width\n```\n\n### aabb.translate([x, y, z])\n\nmoves the box. returns itself.\n\n### aabb.intersects(aabb) -> Boolean\n\nreturns true if the two bounding boxes intersect (or touch at all.)\n\n### aabb.union(aabb) -> new aabb or null\n\nreturns a new `aabb` representing the shared area of the\ntwo aabb's. returns `null` if the boxes don't intersect.\n\n# License\n\nMIT\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/chrisdickinson/aabb-3d.git"
  },
  "scripts": {
    "test": "node test.js"
  },
  "testling": {
    "files": "test.js",
    "browsers": {
      "ie": [
        10
      ],
      "firefox": [
        13,
        14,
        15,
        16,
        17,
        "nightly"
      ],
      "chrome": [
        20,
        23,
        "canary"
      ],
      "safari": [
        6
      ],
      "opera": [
        12,
        "next"
      ]
    }
  },
  "version": "0.0.0"
}
